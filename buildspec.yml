version: 0.2
env:
  variables:
    APP_NAME: "jf-portfolio-web"
    TF_IN_AUTOMATION: true
phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      # install NPM dependencies
      - npm ci
      # install terraform
      - curl -s -qL -o terraform_install.zip https://releases.hashicorp.com/terraform/1.1.2/terraform_1.1.2_linux_amd64.zip
      - unzip terraform_install.zip -d /usr/bin/
      - chmod +x /usr/bin/terraform
    finally:
      - node --version
      - npm --version
      - terraform --version
  pre_build:
    commands:
      # apply terraform
      - echo terraform -chdir=./terraform init -reconfigure -backend-config=./envs/$DEPLOY_ENV.hcl
      - terraform -chdir=./terraform init -reconfigure -backend-config=./envs/$DEPLOY_ENV.hcl
      - terraform -chdir=./terraform state pull
      - terraform -chdir=./terraform apply -var-file=./$DEPLOY_ENV.tfvars -auto-approve
  build:
    commands:
      - npm run build
  post_build:
    commands:
      # upload dist to s3
      - aws s3 sync ./dist/apps/web s3://jf-portfolio-web-$DEPLOY_ENV/ --delete --acl public-read
      # invalidate cloudfront cache
      - DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[*].{id:Id,alias:Aliases.Items[0]}[?alias=='$DOMAIN']" --output text | awk '{print $NF}')
      - aws cloudfront create-invalidation --distribution-id=$DISTRIBUTION_ID --paths /*
